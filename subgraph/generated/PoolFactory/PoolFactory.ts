// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CreatedPool extends ethereum.Event {
  get params(): CreatedPool__Params {
    return new CreatedPool__Params(this);
  }
}

export class CreatedPool__Params {
  _event: CreatedPool;

  constructor(event: CreatedPool) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get description(): string {
    return this._event.parameters[2].value.toString();
  }

  get symbol(): string {
    return this._event.parameters[3].value.toString();
  }

  get documents(): CreatedPoolDocumentsStruct {
    return changetype<CreatedPoolDocumentsStruct>(
      this._event.parameters[4].value.toTuple(),
    );
  }

  get terms(): CreatedPoolTermsStruct {
    return changetype<CreatedPoolTermsStruct>(
      this._event.parameters[5].value.toTuple(),
    );
  }

  get asset(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get credit(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get lockPeriod(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get withdrawDelay(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get borrowAPY(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }
}

export class CreatedPoolDocumentsStruct extends ethereum.Tuple {
  get value(): string {
    return this[0].toString();
  }
}

export class CreatedPoolTermsStruct extends ethereum.Tuple {
  get __html(): string {
    return this[0].toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolFactory__createInputDocumentsStruct extends ethereum.Tuple {
  get value(): string {
    return this[0].toString();
  }
}

export class PoolFactory__createInputTermsStruct extends ethereum.Tuple {
  get __html(): string {
    return this[0].toString();
  }
}

export class PoolFactory__createInputConfigStruct extends ethereum.Tuple {
  get symbol(): string {
    return this[0].toString();
  }

  get asset(): Address {
    return this[1].toAddress();
  }

  get credit(): Address {
    return this[2].toAddress();
  }

  get lockPeriod(): BigInt {
    return this[3].toBigInt();
  }

  get withdrawDelay(): BigInt {
    return this[4].toBigInt();
  }

  get borrowAPY(): BigInt {
    return this[5].toBigInt();
  }
}

export class PoolFactory extends ethereum.SmartContract {
  static bind(address: Address): PoolFactory {
    return new PoolFactory("PoolFactory", address);
  }

  create(
    name: string,
    description: string,
    documents: PoolFactory__createInputDocumentsStruct,
    terms: PoolFactory__createInputTermsStruct,
    config: PoolFactory__createInputConfigStruct,
  ): Address {
    let result = super.call(
      "create",
      "create(string,string,(string),(string),(string,address,address,uint256,uint256,uint256)):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(description),
        ethereum.Value.fromTuple(documents),
        ethereum.Value.fromTuple(terms),
        ethereum.Value.fromTuple(config),
      ],
    );

    return result[0].toAddress();
  }

  try_create(
    name: string,
    description: string,
    documents: PoolFactory__createInputDocumentsStruct,
    terms: PoolFactory__createInputTermsStruct,
    config: PoolFactory__createInputConfigStruct,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "create",
      "create(string,string,(string),(string),(string,address,address,uint256,uint256,uint256)):(address)",
      [
        ethereum.Value.fromString(name),
        ethereum.Value.fromString(description),
        ethereum.Value.fromTuple(documents),
        ethereum.Value.fromTuple(terms),
        ethereum.Value.fromTuple(config),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateCall extends ethereum.Call {
  get inputs(): CreateCall__Inputs {
    return new CreateCall__Inputs(this);
  }

  get outputs(): CreateCall__Outputs {
    return new CreateCall__Outputs(this);
  }
}

export class CreateCall__Inputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get description(): string {
    return this._call.inputValues[1].value.toString();
  }

  get documents(): CreateCallDocumentsStruct {
    return changetype<CreateCallDocumentsStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }

  get terms(): CreateCallTermsStruct {
    return changetype<CreateCallTermsStruct>(
      this._call.inputValues[3].value.toTuple(),
    );
  }

  get config(): CreateCallConfigStruct {
    return changetype<CreateCallConfigStruct>(
      this._call.inputValues[4].value.toTuple(),
    );
  }
}

export class CreateCall__Outputs {
  _call: CreateCall;

  constructor(call: CreateCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateCallDocumentsStruct extends ethereum.Tuple {
  get value(): string {
    return this[0].toString();
  }
}

export class CreateCallTermsStruct extends ethereum.Tuple {
  get __html(): string {
    return this[0].toString();
  }
}

export class CreateCallConfigStruct extends ethereum.Tuple {
  get symbol(): string {
    return this[0].toString();
  }

  get asset(): Address {
    return this[1].toAddress();
  }

  get credit(): Address {
    return this[2].toAddress();
  }

  get lockPeriod(): BigInt {
    return this[3].toBigInt();
  }

  get withdrawDelay(): BigInt {
    return this[4].toBigInt();
  }

  get borrowAPY(): BigInt {
    return this[5].toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
