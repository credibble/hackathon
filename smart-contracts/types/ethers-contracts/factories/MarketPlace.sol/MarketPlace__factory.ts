/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { MarketPlace, MarketPlaceInterface } from "../../MarketPlace.sol/MarketPlace.js";

  const _abi = [
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnableInvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "OwnableUnauthorizedAccount",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "id",
        "type": "uint256"
      }
    ],
    "name": "Delisted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "id",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "seller",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "shares",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "paymentToken",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "price",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "expiresIn",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "vault",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "vaultTokenId",
        "type": "uint256"
      }
    ],
    "name": "Listed",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "id",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "buyer",
        "type": "address"
      }
    ],
    "name": "Purchased",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_shares",
        "type": "address"
      }
    ],
    "name": "addAllowed",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "allowedShares",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_id",
        "type": "uint256"
      }
    ],
    "name": "delist",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_shares",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "_tokenId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "_paymentToken",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "_price",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_expiresIn",
        "type": "uint256"
      }
    ],
    "name": "list",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "listings",
    "outputs": [
      {
        "internalType": "address",
        "name": "vault",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "seller",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "shares",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "paymentToken",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "price",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "expiresIn",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_id",
        "type": "uint256"
      }
    ],
    "name": "purchase",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalListings",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x60806040523461002757610011610036565b61001961002c565b612311610207823961231190f35b610032565b60405190565b5f80fd5b61003f336100a8565b565b90565b60018060a01b031690565b90565b61006661006161006b92610041565b61004f565b610044565b90565b61007790610052565b90565b61008390610044565b90565b61008f9061007a565b9052565b91906100a6905f60208501940190610086565b565b806100c36100bd6100b85f61006e565b61007a565b9161007a565b146100d3576100d1906101a7565b565b6100f66100df5f61006e565b5f918291631e4fbdf760e01b835260048301610093565b0390fd5b5f1c90565b60018060a01b031690565b61011661011b916100fa565b6100ff565b90565b610128905461010a565b90565b5f1b90565b9061014160018060a01b039161012b565b9181191691161790565b61015f61015a61016492610044565b61004f565b610044565b90565b6101709061014b565b90565b61017c90610167565b90565b90565b9061019761019261019e92610173565b61017f565b8254610130565b9055565b5f0190565b6101b05f61011e565b6101ba825f610182565b906101ee6101e87f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610173565b91610173565b916101f761002c565b80610201816101a2565b0390a356fe60806040526004361015610013575b610660565b61001d5f356100bc565b8063715018a6146100b75780638da5cb5b146100b2578063964bc33f146100ad578063ae61c8aa146100a8578063c78b616c146100a3578063cb8523c61461009e578063de74e57b14610099578063efef39a114610094578063f2fde38b1461008f5763f3db41fb0361000e57610629565b6105a0565b610577565b61053b565b610386565b610351565b6102fa565b6101c9565b610150565b6100e4565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f9103126100da57565b6100cc565b5f0190565b34610112576100f43660046100d0565b6100fc6106b4565b6101046100c2565b8061010e816100df565b0390f35b6100c8565b60018060a01b031690565b61012b90610117565b90565b61013790610122565b9052565b919061014e905f6020850194019061012e565b565b34610180576101603660046100d0565b61017c61016b6106c2565b6101736100c2565b9182918261013b565b0390f35b6100c8565b90565b61019181610185565b0361019857565b5f80fd5b905035906101a982610188565b565b906020828203126101c4576101c1915f0161019c565b90565b6100cc565b346101f7576101e16101dc3660046101ab565b6108e5565b6101e96100c2565b806101f3816100df565b0390f35b6100c8565b61020581610122565b0361020c57565b5f80fd5b9050359061021d826101fc565b565b9060208282031261023857610235915f01610210565b90565b6100cc565b90565b61025461024f61025992610117565b61023d565b610117565b90565b61026590610240565b90565b6102719061025c565b90565b9061027e90610268565b5f5260205260405f2090565b1c90565b60ff1690565b6102a49060086102a9930261028a565b61028e565b90565b906102b79154610294565b90565b6102d0906102cb6001915f92610274565b6102ac565b90565b151590565b6102e1906102d3565b9052565b91906102f8905f602085019401906102d8565b565b3461032a5761032661031561031036600461021f565b6102ba565b61031d6100c2565b918291826102e5565b0390f35b6100c8565b61033890610185565b9052565b919061034f905f6020850194019061032f565b565b34610381576103613660046100d0565b61037d61036c610a1b565b6103746100c2565b9182918261033c565b0390f35b6100c8565b346103b45761039e61039936600461021f565b610aa6565b6103a66100c2565b806103b0816100df565b0390f35b6100c8565b634e487b7160e01b5f52603260045260245ffd5b5490565b5f5260205f2090565b6103e3816103cd565b8210156103fd576103f56007916103d1565b910201905f90565b6103b9565b5f1c90565b60018060a01b031690565b61041e61042391610402565b610407565b90565b6104309054610412565b90565b90565b61044261044791610402565b610433565b90565b6104549054610436565b90565b600290610463826103cd565b8110156104cf57610473916103da565b5061047f5f8201610426565b9161048c60018301610426565b9161049960028201610426565b916104a66003830161044a565b916104b360048201610426565b916104cc60066104c56005850161044a565b930161044a565b90565b5f80fd5b949290979695939160e08601985f87016104ec9161012e565b602086016104f99161012e565b604085016105069161012e565b606084016105139161032f565b608083016105209161012e565b60a0820161052d9161032f565b60c0016105399161032f565b565b346105725761056e6105566105513660046101ab565b610457565b936105659795979391936100c2565b978897886104d3565b0390f35b6100c8565b61058a6105853660046101ab565b610c70565b6105926100c2565b8061059c816100df565b0390f35b346105ce576105b86105b336600461021f565b610f61565b6105c06100c2565b806105ca816100df565b0390f35b6100c8565b919060a083820312610624576105eb815f8501610210565b926105f9826020830161019c565b9261062161060a8460408501610210565b93610618816060860161019c565b9360800161019c565b90565b6100cc565b3461065b5761064561063c3660046105d3565b93929092611332565b61064d6100c2565b80610657816100df565b0390f35b6100c8565b5f80fd5b61066c6115d4565b6106746106a1565b565b90565b61068d61068861069292610676565b61023d565b610117565b90565b61069e90610679565b90565b6106b26106ad5f610695565b611622565b565b6106bc610664565b565b5f90565b6106ca6106be565b506106d45f610426565b90565b90565b60209181520190565b5f7f4e6f742073656c6c657200000000000000000000000000000000000000000000910152565b610717600a6020926106da565b610720816106e3565b0190565b6107399060208101905f81830391015261070a565b90565b1561074357565b61074b6100c2565b62461bcd60e51b81528061076160048201610724565b0390fd5b61076e90610240565b90565b61077a90610765565b90565b6107869061025c565b90565b5f80fd5b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b906107b59061078d565b810190811067ffffffffffffffff8211176107cf57604052565b610797565b60e01b90565b5f9103126107e457565b6100cc565b6107f16100c2565b3d5f823e3d90fd5b1b90565b919060086108189102916108125f19846107f9565b926107f9565b9181191691161790565b61083661083161083b92610185565b61023d565b610185565b90565b90565b919061085761085261085f93610822565b61083e565b9083546107fd565b9055565b5f90565b61087991610873610863565b91610841565b565b5f60066108b99282808201558260018201558260028201556108a08360038301610867565b8260048201556108b38360058301610867565b01610867565b565b634e487b7160e01b5f525f60045260245ffd5b905f036108e0576108de9061087b565b565b6108bb565b6108fa6108f4600283906103da565b506106d7565b6109213361091b61091561091060018601610426565b610122565b91610122565b1461073c565b61093c6109376109325f8401610426565b610771565b61077d565b9061094e600163a03fa7e39201610426565b823b15610a165761097e926109735f80946109676100c2565b968795869485936107d4565b83526004830161013b565b03925af18015610a11576109e5575b506109a361099d600283906103da565b906108ce565b6109cd7fc40fdc946efe80191c467f60727c4abc08254a056035d467a4516a86005ab76391610822565b906109d66100c2565b806109e0816100df565b0390a2565b610a04905f3d8111610a0a575b6109fc81836107ab565b8101906107da565b5f61098d565b503d6109f2565b6107e9565b610789565b610a23610863565b50610a2e60026103cd565b90565b610a4290610a3d6115d4565b610a8e565b565b5f1b90565b90610a5560ff91610a44565b9181191691161790565b610a68906102d3565b90565b90565b90610a83610a7e610a8a92610a5f565b610a6b565b8254610a49565b9055565b610aa490610a9f6001916001610274565b610a6e565b565b610aaf90610a31565b565b5f7f4c697374696e6720657870697265640000000000000000000000000000000000910152565b610ae5600f6020926106da565b610aee81610ab1565b0190565b610b079060208101905f818303910152610ad8565b90565b15610b1157565b610b196100c2565b62461bcd60e51b815280610b2f60048201610af2565b0390fd5b610b3c90610240565b90565b610b4890610b33565b90565b610b549061025c565b90565b610b60816102d3565b03610b6757565b5f80fd5b90505190610b7882610b57565b565b90602082820312610b9357610b90915f01610b6b565b90565b6100cc565b604090610bc1610bc89496959396610bb760608401985f85019061012e565b602083019061012e565b019061032f565b565b5f7f496e636f7272656374206e617469766520616d6f756e74000000000000000000910152565b610bfe60176020926106da565b610c0781610bca565b0190565b610c209060208101905f818303910152610bf1565b90565b15610c2a57565b610c326100c2565b62461bcd60e51b815280610c4860048201610c0b565b0390fd5b610c5590610240565b90565b610c6190610c4c565b90565b610c6d9061025c565b90565b610c85610c7f600283906103da565b506106d7565b610cac42610ca6610ca0610c9b6006860161044a565b610185565b91610185565b10610b0a565b610cb860048201610426565b610cd2610ccc610cc75f610695565b610122565b91610122565b145f14610e4257610d0034610cfa610cf4610cef6005860161044a565b610185565b91610185565b14610c23565b5f808080610d20610d1b610d1660018801610426565b610c58565b610c64565b610d2c6005870161044a565b90828215610e39575bf115610e3457610d52610d4d5f610d57935b01610426565b610771565b61077d565b63a03fa7e333823b15610e2f57610d8d92610d825f8094610d766100c2565b968795869485936107d4565b83526004830161013b565b03925af18015610e2a57610dfe575b50610db2610dac600283906103da565b906108ce565b33610de6610de07fb47c52a971a941c629c2f7690d2a3bd407390d3c8eabc35473c70883a3d5da1693610822565b91610268565b91610def6100c2565b80610df9816100df565b0390a3565b610e1d905f3d8111610e23575b610e1581836107ab565b8101906107da565b5f610d9c565b503d610e0b565b6107e9565b610789565b6107e9565b506108fc610d35565b610e5e610e59610e5460048401610426565b610b3f565b610b4b565b9060206323b872dd923390610e9d5f610e7960018701610426565b96610ea8610e896005890161044a565b610e916100c2565b998a97889687956107d4565b855260048501610b98565b03925af1918215610ef7575f610d5292610d4d92610d5795610ecb575b50610d47565b610eeb9060203d8111610ef0575b610ee381836107ab565b810190610b7a565b610ec5565b503d610ed9565b6107e9565b610f0d90610f086115d4565b610f0f565b565b80610f2a610f24610f1f5f610695565b610122565b91610122565b14610f3a57610f3890611622565b565b610f5d610f465f610695565b5f918291631e4fbdf760e01b83526004830161013b565b0390fd5b610f6a90610efc565b565b610f78610f7d91610402565b61028e565b90565b610f8a9054610f6c565b90565b5f7f4e4654206e6f7420616c6c6f7765640000000000000000000000000000000000910152565b610fc1600f6020926106da565b610fca81610f8d565b0190565b610fe39060208101905f818303910152610fb4565b90565b15610fed57565b610ff56100c2565b62461bcd60e51b81528061100b60048201610fce565b0390fd5b61101890610240565b90565b6110249061100f565b90565b6110309061025c565b90565b9050519061104082610188565b565b9060208282031261105b57611058915f01611033565b90565b6100cc565b90565b634e487b7160e01b5f52601160045260245ffd5b61108661108c91939293610185565b92610185565b820180921161109757565b611063565b906110af6110a86100c2565b92836107ab565b565b6110bb60e061109c565b90565b906110c890610122565b9052565b906110d690610185565b9052565b5f5260205f2090565b5490565b6110f0816110e3565b82101561110a576111026007916110da565b910201905f90565b6103b9565b6111199051610122565b90565b9061112d60018060a01b0391610a44565b9181191691161790565b90565b9061114f61114a61115692610268565b611137565b825461111c565b9055565b6111649051610185565b90565b906111735f1991610a44565b9181191691161790565b9061119261118d61119992610822565b61083e565b8254611167565b9055565b9061124560c0600661124b946111c05f82016111ba5f880161110f565b9061113a565b6111d9600182016111d36020880161110f565b9061113a565b6111f2600282016111ec6040880161110f565b9061113a565b61120b600382016112056060880161115a565b9061117d565b6112246004820161121e6080880161110f565b9061113a565b61123d6005820161123760a0880161115a565b9061117d565b01920161115a565b9061117d565b565b919061125e5761125c9161119d565b565b6108bb565b90815491600160401b83101561128e578261128691600161128c950181556110e7565b9061124d565b565b610797565b90565b6112aa6112a56112af92611293565b61023d565b610185565b90565b6112c16112c791939293610185565b92610185565b82039182116112d257565b611063565b919461131f6113299298979561131560a09661130b6113309a61130160c08a019e5f8b019061012e565b602089019061012e565b604087019061032f565b606085019061032f565b608083019061012e565b019061032f565b565b929390919361135361134e61134960018790610274565b610f80565b610fe6565b8361135c6100c2565b90610c4d820182811067ffffffffffffffff8211176115cf57829161138891610c4d61168f853961013b565b03905ff080156115ca5761139b9061077d565b946113ad6113a88661101b565b611027565b6323b872dd3388928792813b156115c5575f6113dc916113e782966113d06100c2565b988997889687956107d4565b855260048501610b98565b03925af180156115c057611594575b50611437602061140d6114088861101b565b611027565b63983fe9729061142c8a926114206100c2565b958694859384936107d4565b83526004830161013b565b03915afa90811561158f575f91611561575b5093600261145690611060565b9087903390889085908792428a61146c91611077565b946114756110b1565b965f880190611483916110be565b6020870190611491916110be565b604086019061149f916110be565b60608501906114ad916110cc565b60808401906114bb916110be565b60a08301906114c9916110cc565b60c08201906114d7916110cc565b6114e091611263565b60026114eb906103cd565b60016114f690611296565b6114ff916112b2565b933395919293429061151091611077565b967fb99f5507b341d8d6e39ebe2ec783b6ed28a6d9f98786b3e006724742df24bb219561153c90610822565b9661154690610268565b9761154f6100c2565b95869561155c95876112d7565b0390a3565b611582915060203d8111611588575b61157a81836107ab565b810190611042565b5f611449565b503d611570565b6107e9565b6115b3905f3d81116115b9575b6115ab81836107ab565b8101906107da565b5f6113f6565b503d6115a1565b6107e9565b610789565b6107e9565b610797565b6115dc6106c2565b6115f56115ef6115ea611681565b610122565b91610122565b036115fc57565b61161e611607611681565b5f91829163118cdaa760e01b83526004830161013b565b0390fd5b61162b5f610426565b611635825f61113a565b906116696116637f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610268565b91610268565b916116726100c2565b8061167c816100df565b0390a3565b6116896106be565b50339056fe60a0604052346100455761001961001461010a565b61012b565b61002161004a565b61095a6102f3823960805181818160a10152818161064201526106b9015261095a90f35b610050565b60405190565b5f80fd5b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b9061007c90610054565b810190811060018060401b0382111761009457604052565b61005e565b906100ac6100a561004a565b9283610072565b565b5f80fd5b60018060a01b031690565b6100c6906100b2565b90565b6100d2816100bd565b036100d957565b5f80fd5b905051906100ea826100c9565b565b9060208282031261010557610102915f016100dd565b90565b6100ae565b610128610c4d8038038061011d81610099565b9283398101906100ec565b90565b61013433610139565b608052565b61014290610194565b565b90565b90565b61015e61015961016392610144565b610147565b6100b2565b90565b61016f9061014a565b90565b61017b906100bd565b9052565b9190610192905f60208501940190610172565b565b806101af6101a96101a45f610166565b6100bd565b916100bd565b146101bf576101bd90610293565b565b6101e26101cb5f610166565b5f918291631e4fbdf760e01b83526004830161017f565b0390fd5b5f1c90565b60018060a01b031690565b610202610207916101e6565b6101eb565b90565b61021490546101f6565b90565b5f1b90565b9061022d60018060a01b0391610217565b9181191691161790565b61024b610246610250926100b2565b610147565b6100b2565b90565b61025c90610237565b90565b61026890610253565b90565b90565b9061028361027e61028a9261025f565b61026b565b825461021c565b9055565b5f0190565b61029c5f61020a565b6102a6825f61026e565b906102da6102d47f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361025f565b9161025f565b916102e361004a565b806102ed8161028e565b0390a356fe60806040526004361015610013575b610420565b61001d5f3561007c565b806303314efa14610077578063150b7a0214610072578063715018a61461006d5780638da5cb5b14610068578063a03fa7e3146100635763f2fde38b0361000e576103ed565b6103ba565b610367565b610334565b6102f6565b6100fc565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f91031261009a57565b61008c565b7f000000000000000000000000000000000000000000000000000000000000000090565b60018060a01b031690565b6100d7906100c3565b90565b6100e3906100ce565b9052565b91906100fa905f602085019401906100da565b565b3461012c5761010c366004610090565b61012861011761009f565b61011f610082565b918291826100e7565b0390f35b610088565b5f80fd5b61013e816100ce565b0361014557565b5f80fd5b9050359061015682610135565b565b90565b61016481610158565b0361016b57565b5f80fd5b9050359061017c8261015b565b565b5f80fd5b5f80fd5b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b906101ae90610186565b810190811067ffffffffffffffff8211176101c857604052565b610190565b906101e06101d9610082565b92836101a4565b565b67ffffffffffffffff8111610200576101fc602091610186565b0190565b610190565b90825f939282370152565b90929192610225610220826101e2565b6101cd565b938185526020850190828401116102415761023f92610205565b565b610182565b9080601f830112156102645781602061026193359101610210565b90565b61017e565b906080828203126102c357610280815f8401610149565b9261028e8260208501610149565b9261029c836040830161016f565b92606082013567ffffffffffffffff81116102be576102bb9201610246565b90565b610131565b61008c565b63ffffffff60e01b1690565b6102dd906102c8565b9052565b91906102f4905f602085019401906102d4565b565b3461032a5761032661031561030c366004610269565b9291909161048a565b61031d610082565b918291826102e1565b0390f35b610088565b5f0190565b3461036257610344366004610090565b61034c6104f7565b610354610082565b8061035e8161032f565b0390f35b610088565b3461039757610377366004610090565b610393610382610536565b61038a610082565b918291826100e7565b0390f35b610088565b906020828203126103b5576103b2915f01610149565b90565b61008c565b346103e8576103d26103cd36600461039c565b6107a0565b6103da610082565b806103e48161032f565b0390f35b610088565b3461041b5761040561040036600461039c565b610810565b61040d610082565b806104178161032f565b0390f35b610088565b5f80fd5b5f90565b90565b61043f61043a610444926100c3565b610428565b6100c3565b90565b6104509061042b565b90565b61045c90610447565b90565b63ffffffff1690565b60e01b90565b61048261047d6104879261045f565b610468565b6102c8565b90565b50505050610496610424565b506104a463150b7a0261046e565b90565b6104af61081b565b6104b76104e4565b565b90565b6104d06104cb6104d5926104b9565b610428565b6100c3565b90565b6104e1906104bc565b90565b6104f56104f05f6104d8565b6108b8565b565b6104ff6104a7565b565b5f90565b5f1c90565b60018060a01b031690565b61052161052691610505565b61050a565b90565b6105339054610515565b90565b61053e610501565b506105485f610529565b90565b61055c9061055761081b565b610635565b565b6105679061042b565b90565b6105739061055e565b90565b61057f90610447565b90565b5f80fd5b905051906105938261015b565b565b906020828203126105ae576105ab915f01610586565b90565b61008c565b6105bb610082565b3d5f823e3d90fd5b6105cc9061042b565b90565b6105d8906105c3565b90565b6105e490610447565b90565b5f9103126105f157565b61008c565b6105ff90610158565b9052565b60409061062c610633949695939661062260608401985f8501906100da565b60208301906100da565b01906105f6565b565b61069d602061066b6106667f000000000000000000000000000000000000000000000000000000000000000061056a565b610576565b63983fe9729061069261067d30610453565b92610686610082565b95869485938493610468565b8352600483016100e7565b03915afa90811561079b575f9161076d575b50906106e26106dd7f00000000000000000000000000000000000000000000000000000000000000006105cf565b6105db565b906323b872dd916106f230610453565b919392813b15610768575f61071a91610725829661070e610082565b98899788968795610468565b855260048501610603565b03925af1801561076357610737575b50565b610756905f3d811161075c575b61074e81836101a4565b8101906105e7565b5f610734565b503d610744565b6105b3565b610582565b61078e915060203d8111610794575b61078681836101a4565b810190610595565b5f6106af565b503d61077c565b6105b3565b6107a99061054b565b565b6107bc906107b761081b565b6107be565b565b806107d96107d36107ce5f6104d8565b6100ce565b916100ce565b146107e9576107e7906108b8565b565b61080c6107f55f6104d8565b5f918291631e4fbdf760e01b8352600483016100e7565b0390fd5b610819906107ab565b565b610823610536565b61083c610836610831610917565b6100ce565b916100ce565b0361084357565b61086561084e610917565b5f91829163118cdaa760e01b8352600483016100e7565b0390fd5b5f1b90565b9061087f60018060a01b0391610869565b9181191691161790565b61089290610447565b90565b90565b906108ad6108a86108b492610889565b610895565b825461086e565b9055565b6108c15f610529565b6108cb825f610898565b906108ff6108f97f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610889565b91610889565b91610908610082565b806109128161032f565b0390a3565b61091f610501565b50339056fea264697066735822122070a88d627ab6bafd00f0353ee0a4683cdfcfc40efa70506f9d59afdb9017ecd264736f6c634300081c0033a2646970667358221220b259877a89aeff6971074d05a67ebf25a4e252997a84762a4dee39712c440ce564736f6c634300081c0033";

  
      type MarketPlaceConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: MarketPlaceConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class MarketPlace__factory extends ContractFactory {
    
      constructor(...args: MarketPlaceConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<MarketPlace & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): MarketPlace__factory {
      return super.connect(runner) as MarketPlace__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): MarketPlaceInterface {
      return new Interface(_abi) as MarketPlaceInterface;
    }
    
    override attach(address: string | Addressable): MarketPlace {
      return super.attach(address) as MarketPlace;
    }
  static connect(address: string, runner?: ContractRunner | null): MarketPlace {
      return new Contract(address, _abi, runner) as unknown as MarketPlace;
    }
  }

  
  