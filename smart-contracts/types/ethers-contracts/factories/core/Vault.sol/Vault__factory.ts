/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../../common.js"
  import type { Vault, VaultInterface } from "../../../core/Vault.sol/Vault.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_shares",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnableInvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "OwnableUnauthorizedAccount",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "",
        "type": "bytes"
      }
    ],
    "name": "onERC721Received",
    "outputs": [
      {
        "internalType": "bytes4",
        "name": "",
        "type": "bytes4"
      }
    ],
    "stateMutability": "pure",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "shares",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "recipient",
        "type": "address"
      }
    ],
    "name": "transferTo",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x60a0604052346100455761001961001461010a565b61012b565b61002161004a565b61095a6102f3823960805181818160a10152818161064201526106b9015261095a90f35b610050565b60405190565b5f80fd5b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b9061007c90610054565b810190811060018060401b0382111761009457604052565b61005e565b906100ac6100a561004a565b9283610072565b565b5f80fd5b60018060a01b031690565b6100c6906100b2565b90565b6100d2816100bd565b036100d957565b5f80fd5b905051906100ea826100c9565b565b9060208282031261010557610102915f016100dd565b90565b6100ae565b610128610c4d8038038061011d81610099565b9283398101906100ec565b90565b61013433610139565b608052565b61014290610194565b565b90565b90565b61015e61015961016392610144565b610147565b6100b2565b90565b61016f9061014a565b90565b61017b906100bd565b9052565b9190610192905f60208501940190610172565b565b806101af6101a96101a45f610166565b6100bd565b916100bd565b146101bf576101bd90610293565b565b6101e26101cb5f610166565b5f918291631e4fbdf760e01b83526004830161017f565b0390fd5b5f1c90565b60018060a01b031690565b610202610207916101e6565b6101eb565b90565b61021490546101f6565b90565b5f1b90565b9061022d60018060a01b0391610217565b9181191691161790565b61024b610246610250926100b2565b610147565b6100b2565b90565b61025c90610237565b90565b61026890610253565b90565b90565b9061028361027e61028a9261025f565b61026b565b825461021c565b9055565b5f0190565b61029c5f61020a565b6102a6825f61026e565b906102da6102d47f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361025f565b9161025f565b916102e361004a565b806102ed8161028e565b0390a356fe60806040526004361015610013575b610420565b61001d5f3561007c565b806303314efa14610077578063150b7a0214610072578063715018a61461006d5780638da5cb5b14610068578063a03fa7e3146100635763f2fde38b0361000e576103ed565b6103ba565b610367565b610334565b6102f6565b6100fc565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f91031261009a57565b61008c565b7f000000000000000000000000000000000000000000000000000000000000000090565b60018060a01b031690565b6100d7906100c3565b90565b6100e3906100ce565b9052565b91906100fa905f602085019401906100da565b565b3461012c5761010c366004610090565b61012861011761009f565b61011f610082565b918291826100e7565b0390f35b610088565b5f80fd5b61013e816100ce565b0361014557565b5f80fd5b9050359061015682610135565b565b90565b61016481610158565b0361016b57565b5f80fd5b9050359061017c8261015b565b565b5f80fd5b5f80fd5b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b906101ae90610186565b810190811067ffffffffffffffff8211176101c857604052565b610190565b906101e06101d9610082565b92836101a4565b565b67ffffffffffffffff8111610200576101fc602091610186565b0190565b610190565b90825f939282370152565b90929192610225610220826101e2565b6101cd565b938185526020850190828401116102415761023f92610205565b565b610182565b9080601f830112156102645781602061026193359101610210565b90565b61017e565b906080828203126102c357610280815f8401610149565b9261028e8260208501610149565b9261029c836040830161016f565b92606082013567ffffffffffffffff81116102be576102bb9201610246565b90565b610131565b61008c565b63ffffffff60e01b1690565b6102dd906102c8565b9052565b91906102f4905f602085019401906102d4565b565b3461032a5761032661031561030c366004610269565b9291909161048a565b61031d610082565b918291826102e1565b0390f35b610088565b5f0190565b3461036257610344366004610090565b61034c6104f7565b610354610082565b8061035e8161032f565b0390f35b610088565b3461039757610377366004610090565b610393610382610536565b61038a610082565b918291826100e7565b0390f35b610088565b906020828203126103b5576103b2915f01610149565b90565b61008c565b346103e8576103d26103cd36600461039c565b6107a0565b6103da610082565b806103e48161032f565b0390f35b610088565b3461041b5761040561040036600461039c565b610810565b61040d610082565b806104178161032f565b0390f35b610088565b5f80fd5b5f90565b90565b61043f61043a610444926100c3565b610428565b6100c3565b90565b6104509061042b565b90565b61045c90610447565b90565b63ffffffff1690565b60e01b90565b61048261047d6104879261045f565b610468565b6102c8565b90565b50505050610496610424565b506104a463150b7a0261046e565b90565b6104af61081b565b6104b76104e4565b565b90565b6104d06104cb6104d5926104b9565b610428565b6100c3565b90565b6104e1906104bc565b90565b6104f56104f05f6104d8565b6108b8565b565b6104ff6104a7565b565b5f90565b5f1c90565b60018060a01b031690565b61052161052691610505565b61050a565b90565b6105339054610515565b90565b61053e610501565b506105485f610529565b90565b61055c9061055761081b565b610635565b565b6105679061042b565b90565b6105739061055e565b90565b61057f90610447565b90565b5f80fd5b905051906105938261015b565b565b906020828203126105ae576105ab915f01610586565b90565b61008c565b6105bb610082565b3d5f823e3d90fd5b6105cc9061042b565b90565b6105d8906105c3565b90565b6105e490610447565b90565b5f9103126105f157565b61008c565b6105ff90610158565b9052565b60409061062c610633949695939661062260608401985f8501906100da565b60208301906100da565b01906105f6565b565b61069d602061066b6106667f000000000000000000000000000000000000000000000000000000000000000061056a565b610576565b63983fe9729061069261067d30610453565b92610686610082565b95869485938493610468565b8352600483016100e7565b03915afa90811561079b575f9161076d575b50906106e26106dd7f00000000000000000000000000000000000000000000000000000000000000006105cf565b6105db565b906323b872dd916106f230610453565b919392813b15610768575f61071a91610725829661070e610082565b98899788968795610468565b855260048501610603565b03925af1801561076357610737575b50565b610756905f3d811161075c575b61074e81836101a4565b8101906105e7565b5f610734565b503d610744565b6105b3565b610582565b61078e915060203d8111610794575b61078681836101a4565b810190610595565b5f6106af565b503d61077c565b6105b3565b6107a99061054b565b565b6107bc906107b761081b565b6107be565b565b806107d96107d36107ce5f6104d8565b6100ce565b916100ce565b146107e9576107e7906108b8565b565b61080c6107f55f6104d8565b5f918291631e4fbdf760e01b8352600483016100e7565b0390fd5b610819906107ab565b565b610823610536565b61083c610836610831610917565b6100ce565b916100ce565b0361084357565b61086561084e610917565b5f91829163118cdaa760e01b8352600483016100e7565b0390fd5b5f1b90565b9061087f60018060a01b0391610869565b9181191691161790565b61089290610447565b90565b90565b906108ad6108a86108b492610889565b610895565b825461086e565b9055565b6108c15f610529565b6108cb825f610898565b906108ff6108f97f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610889565b91610889565b91610908610082565b806109128161032f565b0390a3565b61091f610501565b50339056fea264697066735822122070a88d627ab6bafd00f0353ee0a4683cdfcfc40efa70506f9d59afdb9017ecd264736f6c634300081c0033";

  
      type VaultConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: VaultConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class Vault__factory extends ContractFactory {
    
      constructor(...args: VaultConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_shares: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_shares, overrides || {});
    };
    override deploy(_shares: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_shares, overrides || {}) as Promise<Vault & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): Vault__factory {
      return super.connect(runner) as Vault__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): VaultInterface {
      return new Interface(_abi) as VaultInterface;
    }
    
    override attach(address: string | Addressable): Vault {
      return super.attach(address) as Vault;
    }
  static connect(address: string, runner?: ContractRunner | null): Vault {
      return new Contract(address, _abi, runner) as unknown as Vault;
    }
  }

  
  