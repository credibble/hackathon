/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../../common.js"
  import type { Position, PositionInterface } from "../../../core/Position.sol/Position.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "name",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "symbol",
        "type": "string"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "sender",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "ERC721IncorrectOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "operator",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "ERC721InsufficientApproval",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "approver",
        "type": "address"
      }
    ],
    "name": "ERC721InvalidApprover",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "operator",
        "type": "address"
      }
    ],
    "name": "ERC721InvalidOperator",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "ERC721InvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "receiver",
        "type": "address"
      }
    ],
    "name": "ERC721InvalidReceiver",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "sender",
        "type": "address"
      }
    ],
    "name": "ERC721InvalidSender",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "ERC721NonexistentToken",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "approved",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "Approval",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "operator",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "bool",
        "name": "approved",
        "type": "bool"
      }
    ],
    "name": "ApprovalForAll",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "position",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "repayAmount",
        "type": "uint256"
      }
    ],
    "name": "DecrementPosition",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "position",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "borrower",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "dueAmount",
        "type": "uint256"
      }
    ],
    "name": "IncrementPosition",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "Transfer",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "approve",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "balanceOf",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "borrowInfo",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "dueAmount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "timestamp",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "borrowerToTokenId",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "repayAmount",
        "type": "uint256"
      }
    ],
    "name": "decrementPosition",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "getApproved",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "getInfo",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "borrower",
        "type": "address"
      }
    ],
    "name": "getPositionTokenId",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "borrower",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "dueAmount",
        "type": "uint256"
      }
    ],
    "name": "incrementPosition",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "operator",
        "type": "address"
      }
    ],
    "name": "isApprovedForAll",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "name",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "onlyPositionOwner",
    "outputs": [],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "ownerOf",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "pool",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "safeTransferFrom",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "name": "safeTransferFrom",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "operator",
        "type": "address"
      },
      {
        "internalType": "bool",
        "name": "approved",
        "type": "bool"
      }
    ],
    "name": "setApprovalForAll",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4",
        "name": "interfaceId",
        "type": "bytes4"
      }
    ],
    "name": "supportsInterface",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "symbol",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "tokenURI",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "transferFrom",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x6080604052346100305761001a610014610187565b9061022e565b610022610035565b6127646104bd823961276490f35b61003b565b60405190565b5f80fd5b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b906100679061003f565b810190811060018060401b0382111761007f57604052565b610049565b90610097610090610035565b928361005d565b565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b60018060401b0381116100c5576100c160209161003f565b0190565b610049565b90825f9392825e0152565b909291926100ea6100e5826100a9565b610084565b9381855260208501908284011161010657610104926100ca565b565b6100a5565b9080601f8301121561012957816020610126935191016100d5565b90565b6100a1565b919091604081840312610182575f81015160018060401b03811161017d578361015891830161010b565b92602082015160018060401b03811161017857610175920161010b565b90565b61009d565b61009d565b610099565b6101a5612c218038038061019a81610084565b92833981019061012e565b9091565b5f1b90565b906101bf60018060a01b03916101a9565b9181191691161790565b60018060a01b031690565b90565b6101eb6101e66101f0926101c9565b6101d4565b6101c9565b90565b6101fc906101d7565b90565b610208906101f3565b90565b90565b9061022361021e61022a926101ff565b61020b565b82546101ae565b9055565b9061023891610245565b61024333600661020e565b565b9061024f916104a5565b565b5190565b634e487b7160e01b5f52602260045260245ffd5b9060016002830492168015610289575b602083101461028457565b610255565b91607f1691610279565b5f5260205f2090565b601f602091010490565b1b90565b919060086102c59102916102bf5f19846102a6565b926102a6565b9181191691161790565b90565b6102e66102e16102eb926102cf565b6101d4565b6102cf565b90565b90565b919061030761030261030f936102d2565b6102ee565b9083546102aa565b9055565b5f90565b61032991610323610313565b916102f1565b565b5b818110610337575050565b806103445f600193610317565b0161032c565b9190601f811161035a575b505050565b61036661038b93610293565b9060206103728461029c565b83019310610393575b6103849061029c565b019061032b565b5f8080610355565b91506103848192905061037b565b1c90565b906103b5905f19906008026103a1565b191690565b816103c4916103a5565b906002021790565b906103d681610251565b9060018060401b038211610494576103f8826103f28554610269565b8561034a565b602090601f831160011461042c5791809161041b935f92610420575b50506103ba565b90555b565b90915001515f80610414565b601f1983169161043b85610293565b925f5b81811061047c57509160029391856001969410610462575b5050500201905561041e565b610472910151601f8416906103a5565b90555f8080610456565b9193602060018192878701518155019501920161043e565b610049565b906104a3916103cc565b565b906104b36104ba925f610499565b6001610499565b56fe60806040526004361015610013575b610b83565b61001d5f3561016c565b806301ffc9a71461016757806306fdde0314610162578063081812fc1461015d578063095ea7b31461015857806316f0115b146101535780631a3cd59a1461014e57806320de12f71461014957806323b872dd1461014457806342842e0e1461013f5780636352211e1461013a578063652a4f4f1461013557806370a08231146101305780637d3e2a5a1461012b57806395d89b4114610126578063a22cb46514610121578063a57a17b51461011c578063b88d4fde14610117578063c87b56dd14610112578063dd779f861461010d578063e985e9c5146101085763fd89bca80361000e57610b4e565b610b18565b610ab7565b610a82565b610a64565b6108f0565b61088f565b61080a565b6107d2565b610713565b6106de565b6105fc565b6105e1565b6105c6565b610556565b6104cf565b61045b565b6103e3565b610359565b6102a7565b6101f8565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f80fd5b63ffffffff60e01b1690565b61019981610184565b036101a057565b5f80fd5b905035906101b182610190565b565b906020828203126101cc576101c9915f016101a4565b90565b61017c565b151590565b6101df906101d1565b9052565b91906101f6905f602085019401906101d6565b565b346102285761022461021361020e3660046101b3565b610b8b565b61021b610172565b918291826101e3565b0390f35b610178565b5f91031261023757565b61017c565b5190565b60209181520190565b90825f9392825e0152565b601f801991011690565b61027d61028660209361028b936102748161023c565b93848093610240565b95869101610249565b610254565b0190565b6102a49160208201915f81840391015261025e565b90565b346102d7576102b736600461022d565b6102d36102c2610d0f565b6102ca610172565b9182918261028f565b0390f35b610178565b90565b6102e8816102dc565b036102ef57565b5f80fd5b90503590610300826102df565b565b9060208282031261031b57610318915f016102f3565b90565b61017c565b60018060a01b031690565b61033490610320565b90565b6103409061032b565b9052565b9190610357905f60208501940190610337565b565b346103895761038561037461036f366004610302565b610d28565b61037c610172565b91829182610344565b0390f35b610178565b6103978161032b565b0361039e57565b5f80fd5b905035906103af8261038e565b565b91906040838203126103d957806103cd6103d6925f86016103a2565b936020016102f3565b90565b61017c565b5f0190565b34610412576103fc6103f63660046103b1565b90610d47565b610404610172565b8061040e816103de565b0390f35b610178565b1c90565b60018060a01b031690565b61043690600861043b9302610417565b61041b565b90565b906104499154610426565b90565b61045860065f9061043e565b90565b3461048b5761046b36600461022d565b61048761047661044c565b61047e610172565b91829182610344565b0390f35b610178565b610499906102dc565b9052565b6040906104c66104cd94969593966104bc60608401985f850190610490565b6020830190610490565b0190610490565b565b34610502576104fe6104ea6104e5366004610302565b610de6565b6104f5939193610172565b9384938461049d565b0390f35b610178565b909160608284031261053c57610539610522845f85016103a2565b9361053081602086016102f3565b936040016102f3565b90565b61017c565b9190610554905f60208501940190610490565b565b346105875761058361057261056c366004610507565b916111e8565b61057a610172565b91829182610541565b0390f35b610178565b90916060828403126105c1576105be6105a7845f85016103a2565b936105b581602086016103a2565b936040016102f3565b90565b61017c565b346105dc576105d636600461058c565b9161127d565b610178565b346105f7576105f136600461058c565b916112f0565b610178565b3461062c57610628610617610612366004610302565b611301565b61061f610172565b91829182610344565b0390f35b610178565b9060208282031261064a57610647915f016103a2565b90565b61017c565b90565b61066661066161066b92610320565b61064f565b610320565b90565b61067790610652565b90565b6106839061066e565b90565b906106909061067a565b5f5260205260405f2090565b90565b6106af9060086106b49302610417565b61069c565b90565b906106c2915461069f565b90565b6106db906106d66009915f92610686565b6106b7565b90565b3461070e5761070a6106f96106f4366004610631565b6106c5565b610701610172565b91829182610541565b0390f35b610178565b346107435761073f61072e610729366004610631565b61133e565b610736610172565b91829182610541565b0390f35b610178565b61075c610757610761926102dc565b61064f565b6102dc565b90565b9061076e90610748565b5f5260205260405f2090565b5f1c90565b61078b6107909161077a565b61069c565b90565b61079d905461077f565b90565b6107ab906008610764565b6107b65f8201610793565b916107cf60026107c860018501610793565b9301610793565b90565b34610805576108016107ed6107e8366004610302565b6107a0565b6107f8939193610172565b9384938461049d565b0390f35b610178565b3461083a5761081a36600461022d565b6108366108256113a4565b61082d610172565b9182918261028f565b0390f35b610178565b610848816101d1565b0361084f57565b5f80fd5b905035906108608261083f565b565b919060408382031261088a578061087e610887925f86016103a2565b93602001610853565b90565b61017c565b346108be576108a86108a2366004610862565b906113ba565b6108b0610172565b806108ba816103de565b0390f35b610178565b91906040838203126108eb57806108df6108e8925f86016102f3565b936020016102f3565b90565b61017c565b3461091f576109096109033660046108c3565b906115ed565b610911610172565b8061091b816103de565b0390f35b610178565b5f80fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b9061094a90610254565b810190811067ffffffffffffffff82111761096457604052565b61092c565b9061097c610975610172565b9283610940565b565b67ffffffffffffffff811161099c57610998602091610254565b0190565b61092c565b90825f939282370152565b909291926109c16109bc8261097e565b610969565b938185526020850190828401116109dd576109db926109a1565b565b610928565b9080601f83011215610a00578160206109fd933591016109ac565b90565b610924565b90608082820312610a5f57610a1c815f84016103a2565b92610a2a82602085016103a2565b92610a3883604083016102f3565b92606082013567ffffffffffffffff8111610a5a57610a5792016109e2565b90565b610180565b61017c565b34610a7d57610a74366004610a05565b929190916115f9565b610178565b34610ab257610aae610a9d610a98366004610302565b611687565b610aa5610172565b9182918261028f565b0390f35b610178565b34610ae657610ad0610aca3660046103b1565b9061179b565b610ad8610172565b80610ae2816103de565b0390f35b610178565b9190604083820312610b135780610b07610b10925f86016103a2565b936020016103a2565b90565b61017c565b34610b4957610b45610b34610b2e366004610aeb565b90611814565b610b3c610172565b918291826101e3565b0390f35b610178565b34610b7e57610b7a610b69610b64366004610631565b61183c565b610b71610172565b91829182610541565b0390f35b610178565b5f80fd5b5f90565b610b93610b87565b5080610bae610ba86380ac58cd60e01b610184565b91610184565b148015610bd2575b908115610bc2575b5090565b610bcc915061185b565b5f610bbe565b5080610bed610be7635b5e139f60e01b610184565b91610184565b14610bb6565b606090565b634e487b7160e01b5f52602260045260245ffd5b9060016002830492168015610c2c575b6020831014610c2757565b610bf8565b91607f1691610c1c565b60209181520190565b5f5260205f2090565b905f9291805490610c62610c5b83610c0c565b8094610c36565b916001811690815f14610cb95750600114610c7d575b505050565b610c8a9192939450610c3f565b915f925b818410610ca157505001905f8080610c78565b60018160209295939554848601520191019290610c8e565b92949550505060ff19168252151560200201905f8080610c78565b90610cde91610c48565b90565b90610d01610cfa92610cf1610172565b93848092610cd4565b0383610940565b565b610d0c90610ce1565b90565b610d17610bf3565b50610d215f610d03565b90565b5f90565b610d4490610d34610d24565b50610d3e81611881565b506118ed565b90565b90610d5b9190610d5561190c565b91611919565b565b5f90565b90610d6b906102dc565b9052565b610d796060610969565b90565b90610dcb610dc26002610d8d610d6f565b94610da4610d9c5f8301610793565b5f8801610d61565b610dbc610db360018301610793565b60208801610d61565b01610793565b60408401610d61565b565b610dd690610d7c565b90565b610de390516102dc565b90565b610e0f610e1491610df5610d5d565b50610dfe610d5d565b50610e07610d5d565b506008610764565b610dcd565b90610e205f8301610dd9565b90610e396040610e3260208601610dd9565b9401610dd9565b91929190565b610e4b610e509161077a565b61041b565b90565b610e5d9054610e3f565b90565b5f7f506f736974696f6e3a206e6f7420706f6f6c0000000000000000000000000000910152565b610e946012602092610240565b610e9d81610e60565b0190565b610eb69060208101905f818303910152610e87565b90565b15610ec057565b610ec8610172565b62461bcd60e51b815280610ede60048201610ea1565b0390fd5b90610f13939291610f0e610ef66006610e53565b610f08610f023361032b565b9161032b565b14610eb9565b61107a565b90565b90565b610f2d610f28610f3292610f16565b61064f565b6102dc565b90565b90565b634e487b7160e01b5f52601160045260245ffd5b610f5b610f61919392936102dc565b926102dc565b8201809211610f6c57565b610f38565b5f1b90565b90610f825f1991610f71565b9181191691161790565b90565b90610fa4610f9f610fab92610748565b610f8c565b8254610f76565b9055565b610fb8906102dc565b5f198114610fc65760010190565b610f38565b610fd56060610969565b90565b9061101c6040600261102294610ffb5f8201610ff55f8801610dd9565b90610f8f565b6110146001820161100e60208801610dd9565b90610f8f565b019201610dd9565b90610f8f565b565b9061102e91610fd8565b565b6110399061066e565b90565b6110716110789461106760609498979561105d608086019a5f870190610337565b6020850190610490565b6040830190610490565b0190610490565b565b939291935061109361108e60098390610686565b610793565b806110a66110a05f610f19565b916102dc565b145f1461118257506110c06110bb6007610793565b610faf565b6110cb816007610f8f565b936110e1856110dc60098590610686565b610f8f565b611125816111148561110b42916111026110f9610fcb565b955f8701610d61565b60208501610d61565b60408301610d61565b61112060088890610764565b611024565b611130828690611929565b5b61113a30611030565b9161117d86929461116b7f84241a06a422e5b82efe6f55bf1ecc647276a05accee92fa823c3e5da1e1867e9561067a565b95611174610172565b9485948561103c565b0390a2565b936111e361119a61119560088890610764565b610f35565b6111b9836111b35f8401916111ae83610793565b610f4c565b90610f8f565b6111d9856111d360018401916111ce83610793565b610f4c565b90610f8f565b6002429101610f8f565b611131565b906111fb92916111f6610d5d565b610ee2565b90565b60207f6400000000000000000000000000000000000000000000000000000000000000917f426f72726f774e46543a207472616e7366657273206172652064697361626c655f8201520152565b6112586021604092610240565b611261816111fe565b0190565b61127a9060208101905f81830391015261124b565b90565b611285610172565b62461bcd60e51b81528061129b60048201611265565b0390fd5b67ffffffffffffffff81116112bd576112b9602091610254565b0190565b61092c565b906112d46112cf8361129f565b610969565b918252565b6112e25f6112c2565b90565b6112ed6112d9565b90565b8290916112fb6112e5565b926115f9565b6113139061130d610d24565b50611881565b90565b61132a61132561132f92610f16565b61064f565b610320565b90565b61133b90611316565b90565b611346610d5d565b508061136261135c6113575f611332565b61032b565b9161032b565b1461137d5761137561137a916003610686565b610793565b90565b6113a06113895f611332565b5f9182916322718ad960e21b835260048301610344565b0390fd5b6113ac610bf3565b506113b76001610d03565b90565b6113ce916113c661190c565b919091611984565b565b906113ff916113fa6113e26006610e53565b6113f46113ee3361032b565b9161032b565b14610eb9565b6114cb565b565b5f7f506f736974696f6e3a206e6f2061637469766520706f736974696f6e00000000910152565b611435601c602092610240565b61143e81611401565b0190565b6114579060208101905f818303910152611428565b90565b1561146157565b611469610172565b62461bcd60e51b81528061147f60048201611442565b0390fd5b611492611498919392936102dc565b926102dc565b82039182116114a357565b610f38565b9160206114c99294936114c260408201965f830190610490565b0190610490565b565b6114e8816114e16114db5f610f19565b916102dc565b141561145a565b6115506114ff6114fa60088490610764565b610f35565b61150b60018201610793565b61151d611517866102dc565b916102dc565b10155f1461159f576115458461153f600184019161153a83610793565b611483565b90610f8f565b5b6002429101610f8f565b61155930611030565b90916115857fca8b11392eef6356f6fddf7c0f32d7f8ebc66f88b819843e26118bcc66fab6ee9261067a565b9261159a611591610172565b928392836114a8565b0390a2565b6115d36115b8856115b260018501610793565b90611483565b6115cd5f8401916115c883610793565b611483565b90610f8f565b6115e86115df5f610f19565b60018301610f8f565b611546565b906115f7916113d0565b565b829091909161127d565b90565b5190565b6116126112d9565b90565b905090565b61163f6116369260209261162d8161023c565b94858093611615565b93849101610249565b0190565b61165190611657939261161a565b9061161a565b90565b61167992916116859161166b610172565b948592602084019283611643565b90810382520383610940565b565b61168f610bf3565b5061169981611881565b506116a2611ca2565b906116b46116af83611603565b611606565b6116c66116c05f610f19565b916102dc565b115f146116e4576116da6116e09291611d73565b9061165a565b5b90565b50506116ee61160a565b6116e1565b60207f6e65720000000000000000000000000000000000000000000000000000000000917f506f736974696f6e3a2063616c6c6572206973206e6f7420746f6b656e206f775f8201520152565b61174d6023604092610240565b611756816116f3565b0190565b61176f9060208101905f818303910152611740565b90565b1561177957565b611781610172565b62461bcd60e51b8152806117976004820161175a565b0390fd5b6117b96117b36117ad6117bf94611301565b9261032b565b9161032b565b14611772565b565b906117cb9061067a565b5f5260205260405f2090565b906117e19061067a565b5f5260205260405f2090565b60ff1690565b6117ff6118049161077a565b6117ed565b90565b61181190546117f3565b90565b6118399161182f61183492611827610b87565b5060056117c1565b6117d7565b611807565b90565b6118536118589161184b610d5d565b506009610686565b610793565b90565b611863610b87565b5061187d6118776301ffc9a760e01b610184565b91610184565b1490565b611889610d24565b5061189381611e1c565b90816118af6118a96118a45f611332565b61032b565b9161032b565b146118b8575090565b6118d3905f918291637e27328960e01b835260048301610541565b0390fd5b906118e190610748565b5f5260205260405f2090565b611904611909916118fc610d24565b5060046118d7565b610e53565b90565b611914610d24565b503390565b916119279291600192611e79565b565b9061193d91906119376112e5565b91611fc3565b565b9061194b60ff91610f71565b9181191691161790565b61195e906101d1565b90565b90565b9061197961197461198092611955565b611961565b825461193f565b9055565b919091826119a261199c6119975f611332565b61032b565b9161032b565b14611a16576119c6826119c16119ba600585906117c1565b86906117d7565b611964565b919091611a116119ff6119f97f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319361067a565b9361067a565b93611a08610172565b918291826101e3565b0390a3565b611a31835f918291630b61174360e31b835260048301610344565b0390fd5b611a3e90610652565b90565b611a4a90611a35565b90565b611a569061066e565b90565b60e01b90565b90505190611a6c82610190565b565b90602082820312611a8757611a84915f01611a5f565b90565b61017c565b60209181520190565b611ab4611abd602093611ac293611aab81611606565b93848093611a8c565b95869101610249565b610254565b0190565b9092611af990611aef611b069694611ae560808601975f870190610337565b6020850190610337565b6040830190610490565b6060818403910152611a95565b90565b90611b1b611b168361097e565b610969565b918252565b606090565b3d5f14611b4057611b353d611b09565b903d5f602084013e5b565b611b48611b20565b90611b3e565b9193843b611b64611b5e5f610f19565b916102dc565b11611b71575b5050505050565b611ba95f602094611bb4611b8c611b878a611a41565b611a4d565b9463150b7a02929698611b9d610172565b998a9889978896611a59565b865260048601611ac6565b03925af180915f92611c72575b50155f14611c2f57506001611bdc57505b5f80808080611b6a565b611be4611b25565b90611bee82611606565b611c00611bfa5f610f19565b916102dc565b145f14611c2657611c22905f918291633250574960e11b835260048301610344565b0390fd5b50602081519101fd5b611c48611c42630a85bd0160e11b610184565b91610184565b03611c535750611bd2565b611c6e905f918291633250574960e11b835260048301610344565b0390fd5b611c9491925060203d8111611c9b575b611c8c8183610940565b810190611a6e565b905f611bc1565b503d611c82565b611caa610bf3565b50611cb361160a565b90565b90565b611ccd611cc8611cd292611cb6565b61064f565b6102dc565b90565b90611ce091016102dc565b90565b369037565b90611d0d611cf5836112c2565b92602080611d03869361129f565b9201910390611ce3565b565b6001611d1b91036102dc565b90565b90565b611d35611d30611d3a92611d1e565b61064f565b6102dc565b90565b634e487b7160e01b5f52601260045260245ffd5b611d5d611d63916102dc565b916102dc565b908115611d6e570490565b611d3d565b611d7b610bf3565b50611d98611d8882612165565b611d926001611cb9565b90611cd5565b90611da282611ce8565b91611dab610d5d565b5060208301015b600115611e1557611dc5611df191611d0f565b916f181899199a1a9b1b9c1cb0b131b232b360811b600a82061a8353611deb600a611d21565b90611d51565b80611e04611dfe5f610f19565b916102dc565b14611e0f5790611db2565b50505b90565b5050611e12565b611e33611e3891611e2b610d24565b5060026118d7565b610e53565b90565b90611e4c60018060a01b0391610f71565b9181191691161790565b90565b90611e6e611e69611e759261067a565b611e56565b8254611e3b565b9055565b919092808015611fa0575b611ea2575b505090611e9b611ea0929160046118d7565b611e59565b565b611eab84611881565b9180611ec7611ec1611ebc5f611332565b61032b565b9161032b565b141580611f85575b80611f6b575b611f4c575091611e9b91611ea09493611ef1575b509192611e89565b818490611f30611f2a611f247f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259561067a565b9261067a565b92610748565b92611f39610172565b80611f43816103de565b0390a45f611ee9565b611f67905f91829163a9fbf51f60e01b835260048301610344565b0390fd5b50611f80611f7a848390611814565b156101d1565b611ed5565b5082611f99611f938361032b565b9161032b565b1415611ecf565b5081611fbc611fb6611fb15f611332565b61032b565b9161032b565b1415611e84565b9091611fef92611fd48382906123bc565b611fdc61190c565b92611fe65f611332565b90919293611b4e565b565b90565b61200861200361200d92611ff1565b61064f565b6102dc565b90565b90565b61202761202261202c92612010565b61064f565b6102dc565b90565b90565b61204661204161204b9261202f565b61064f565b6102dc565b90565b90565b61206561206061206a9261204e565b61064f565b6102dc565b90565b90565b61208461207f6120899261206d565b61064f565b6102dc565b90565b90565b6120a361209e6120a89261208c565b61064f565b6102dc565b90565b90565b6120c26120bd6120c7926120ab565b61064f565b6102dc565b90565b90565b6120e16120dc6120e6926120ca565b61064f565b6102dc565b90565b90565b6121006120fb612105926120e9565b61064f565b6102dc565b90565b90565b61211f61211a61212492612108565b61064f565b6102dc565b90565b90565b61213e61213961214392612127565b61064f565b6102dc565b90565b90565b61215d61215861216292612146565b61064f565b6102dc565b90565b61216d610d5d565b506121775f610f19565b90806121a161219b72184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b611ff4565b916102dc565b1015612379575b806121c96121c36d04ee2d6d415b85acef8100000000612032565b916102dc565b101561233e575b806121ea6121e4662386f26fc10000612070565b916102dc565b101561230a575b806122086122026305f5e1006120ae565b916102dc565b10156122d9575b8061222461221e6127106120ec565b916102dc565b10156122aa575b8061223f612239606461212a565b916102dc565b101561227c575b612259612253600a611d21565b916102dc565b1015612263575b90565b612277906122716001611cb9565b90611cd5565b612260565b6122936122a49161228d606461212a565b90611d51565b9161229e6002612149565b90611cd5565b90612246565b6122c26122d3916122bc6127106120ec565b90611d51565b916122cd600461210b565b90611cd5565b9061222b565b6122f3612304916122ed6305f5e1006120ae565b90611d51565b916122fe60086120cd565b90611cd5565b9061220f565b61232761233891612321662386f26fc10000612070565b90611d51565b91612332601061208f565b90611cd5565b906121f1565b6123626123739161235c6d04ee2d6d415b85acef8100000000612032565b90611d51565b9161236d6020612051565b90611cd5565b906121d0565b6123a56123b69161239f72184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b611ff4565b90611d51565b916123b06040612013565b90611cd5565b906121a8565b90816123d86123d26123cd5f611332565b61032b565b9161032b565b14612439576123f191906123eb5f611332565b9161246e565b61240b6124056124005f611332565b61032b565b9161032b565b0361241257565b61243561241e5f611332565b5f9182916339e3563760e11b835260048301610344565b0390fd5b61245c6124455f611332565b5f918291633250574960e11b835260048301610344565b0390fd5b9061246b91036102dc565b90565b90612477610d24565b5061248181611e1c565b928061249d6124976124925f611332565b61032b565b9161032b565b036125dc575b50826124bf6124b96124b45f611332565b61032b565b9161032b565b03612588575b816124e06124da6124d55f611332565b61032b565b9161032b565b03612552575b6124fb826124f6600284906118d7565b611e59565b829161253961253361252d7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9561067a565b9261067a565b92610748565b92612542610172565b8061254c816103de565b0390a490565b61258361255f6001611cb9565b61257d61256e60038690610686565b9161257883610793565b611cd5565b90610f8f565b6124e6565b6125a66125945f611332565b8261259e5f611332565b905f92611e79565b6125d76125b36001611cb9565b6125d16125c260038790610686565b916125cc83610793565b612460565b90610f8f565b6124c5565b6125e99084908391612612565b5f6124a3565b91602061261092949361260960408201965f830190610337565b0190610490565b565b6126276126218284869161268e565b156101d1565b61263057505050565b61264a61264461263f5f611332565b61032b565b9161032b565b145f146126705761266c825f918291637e27328960e01b835260048301610541565b0390fd5b61268a5f92839263177e802f60e01b8452600484016125ef565b0390fd5b9190612698610b87565b50806126b46126ae6126a95f611332565b61032b565b9161032b565b141592836126c3575b50505090565b80919293506126da6126d48461032b565b9161032b565b1490811561271c575b509182156126f6575b50505f80806126bd565b61271491925061270861270e916118ed565b9261032b565b9161032b565b145f806126ec565b61272891508290611814565b5f6126e356fea2646970667358221220318f8d13507cbb9146515f7ab4ceb45933a8c9a5195703efab541a5e6378b44b64736f6c634300081c0033";

  
      type PositionConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: PositionConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class Position__factory extends ContractFactory {
    
      constructor(...args: PositionConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(name: string, symbol: string, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(name, symbol, overrides || {});
    };
    override deploy(name: string, symbol: string, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(name, symbol, overrides || {}) as Promise<Position & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): Position__factory {
      return super.connect(runner) as Position__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): PositionInterface {
      return new Interface(_abi) as PositionInterface;
    }
    
    override attach(address: string | Addressable): Position {
      return super.attach(address) as Position;
    }
  static connect(address: string, runner?: ContractRunner | null): Position {
      return new Contract(address, _abi, runner) as unknown as Position;
    }
  }

  
  