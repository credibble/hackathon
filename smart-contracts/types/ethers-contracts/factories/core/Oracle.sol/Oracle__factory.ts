/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../../common.js"
  import type { Oracle, OracleInterface } from "../../../core/Oracle.sol/Oracle.js";

  const _abi = [
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnableInvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "OwnableUnauthorizedAccount",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "asset",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "credit",
        "type": "uint256"
      }
    ],
    "name": "CreditToAssetSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "creditToAsset",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "asset",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "getCredits",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "asset",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "ratio",
        "type": "uint256"
      }
    ],
    "name": "setCreditToAsset",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x60806040523461002757610011610036565b61001961002c565b610a6b6102078239610a6b90f35b610032565b60405190565b5f80fd5b61003f336100a8565b565b90565b60018060a01b031690565b90565b61006661006161006b92610041565b61004f565b610044565b90565b61007790610052565b90565b61008390610044565b90565b61008f9061007a565b9052565b91906100a6905f60208501940190610086565b565b806100c36100bd6100b85f61006e565b61007a565b9161007a565b146100d3576100d1906101a7565b565b6100f66100df5f61006e565b5f918291631e4fbdf760e01b835260048301610093565b0390fd5b5f1c90565b60018060a01b031690565b61011661011b916100fa565b6100ff565b90565b610128905461010a565b90565b5f1b90565b9061014160018060a01b039161012b565b9181191691161790565b61015f61015a61016492610044565b61004f565b610044565b90565b6101709061014b565b90565b61017c90610167565b90565b90565b9061019761019261019e92610173565b61017f565b8254610130565b9055565b5f0190565b6101b05f61011e565b6101ba825f610182565b906101ee6101e87f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610173565b91610173565b916101f761002c565b80610201816101a2565b0390a356fe60806040526004361015610013575b610360565b61001d5f3561007c565b8063715018a6146100775780638da5cb5b14610072578063c28b3db31461006d578063dca6fc8d14610068578063de7e3212146100635763f2fde38b0361000e5761032d565b6102f9565b6102c4565b6101dd565b610110565b6100a4565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f91031261009a57565b61008c565b5f0190565b346100d2576100b4366004610090565b6100bc6103b4565b6100c4610082565b806100ce8161009f565b0390f35b610088565b60018060a01b031690565b6100eb906100d7565b90565b6100f7906100e2565b9052565b919061010e905f602085019401906100ee565b565b3461014057610120366004610090565b61013c61012b6103f3565b610133610082565b918291826100fb565b0390f35b610088565b61014e816100e2565b0361015557565b5f80fd5b9050359061016682610145565b565b90565b61017481610168565b0361017b57565b5f80fd5b9050359061018c8261016b565b565b91906040838203126101b657806101aa6101b3925f8601610159565b9360200161017f565b90565b61008c565b6101c490610168565b9052565b91906101db905f602085019401906101bb565b565b3461020e5761020a6101f96101f336600461018e565b9061044c565b610201610082565b918291826101c8565b0390f35b610088565b9060208282031261022c57610229915f01610159565b90565b61008c565b90565b61024861024361024d926100d7565b610231565b6100d7565b90565b61025990610234565b90565b61026590610250565b90565b906102729061025c565b5f5260205260405f2090565b1c90565b90565b61029590600861029a930261027e565b610282565b90565b906102a89154610285565b90565b6102c1906102bc6001915f92610268565b61029d565b90565b346102f4576102f06102df6102da366004610213565b6102ab565b6102e7610082565b918291826101c8565b0390f35b610088565b346103285761031261030c36600461018e565b90610569565b61031a610082565b806103248161009f565b0390f35b610088565b3461035b57610345610340366004610213565b6105da565b61034d610082565b806103578161009f565b0390f35b610088565b5f80fd5b61036c6105e5565b6103746103a1565b565b90565b61038d61038861039292610376565b610231565b6100d7565b90565b61039e90610379565b90565b6103b26103ad5f610395565b610671565b565b6103bc610364565b565b5f90565b5f1c90565b60018060a01b031690565b6103de6103e3916103c2565b6103c7565b90565b6103f090546103d2565b90565b6103fb6103be565b506104055f6103e6565b90565b5f90565b61041861041d916103c2565b610282565b90565b61042a905461040c565b90565b90565b61044461043f6104499261042d565b610231565b610168565b90565b9061046c6104676104849361045f610408565b506001610268565b610420565b9061047e670de0b6b3a7640000610430565b916107d4565b90565b90610499916104946105e5565b610518565b565b5f1b90565b906104ac5f199161049b565b9181191691161790565b6104ca6104c56104cf92610168565b610231565b610168565b90565b90565b906104ea6104e56104f1926104b6565b6104d2565b82546104a0565b9055565b91602061051692949361050f60408201965f8301906100ee565b01906101bb565b565b61052d8261052860018490610268565b6104d5565b907f67b941c806468a7ad065a547b695ea6dda7da85f1e9206d495494c48681ba8bf9161056461055b610082565b928392836104f5565b0390a1565b9061057391610487565b565b610586906105816105e5565b610588565b565b806105a361059d6105985f610395565b6100e2565b916100e2565b146105b3576105b190610671565b565b6105d66105bf5f610395565b5f918291631e4fbdf760e01b8352600483016100fb565b0390fd5b6105e390610575565b565b6105ed6103f3565b6106066106006105fb6109c1565b6100e2565b916100e2565b0361060d57565b61062f6106186109c1565b5f91829163118cdaa760e01b8352600483016100fb565b0390fd5b9061064460018060a01b039161049b565b9181191691161790565b90565b9061066661066161066d9261025c565b61064e565b8254610633565b9055565b61067a5f6103e6565b610684825f610651565b906106b86106b27f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09361025c565b9161025c565b916106c1610082565b806106cb8161009f565b0390a3565b6106e46106df6106e992610376565b610231565b610168565b90565b634e487b7160e01b5f52601260045260245ffd5b61070c61071291610168565b91610168565b90811561071d570490565b6106ec565b90565b61073961073461073e92610722565b610231565b610168565b90565b61074b6012610725565b90565b90565b61076561076061076a9261074e565b610231565b610168565b90565b6107776011610751565b90565b906107859103610168565b90565b906107939102610168565b90565b90565b6107ad6107a86107b292610796565b610231565b610168565b90565b90565b6107cc6107c76107d1926107b5565b610231565b610168565b90565b909291926107e0610408565b506107ec8282906109ce565b91909192826108036107fd5f6106d0565b91610168565b146109b0578561081b61081585610168565b91610168565b111561097e57610975928661097b96979361086c93610838610408565b50099085821190039403936001836108595f61085487916106d0565b61077a565b1680809504960493805f03040190610788565b179161096f61095361092f61090b6108e76108c3610894600361088f8991610799565b610788565b61089e60026107b8565b186108bd60026108b86108b28b8590610788565b916107b8565b61077a565b90610788565b6108e160026108dc6108d68a8590610788565b916107b8565b61077a565b90610788565b61090560026109006108fa898590610788565b916107b8565b61077a565b90610788565b610929600261092461091e888590610788565b916107b8565b61077a565b90610788565b61094d6002610948610942878590610788565b916107b8565b61077a565b90610788565b9161096a6109646002928590610788565b916107b8565b61077a565b90610788565b90610788565b90565b6109ab8661099461098e5f6106d0565b91610168565b1461099d610741565b6109a561076d565b916109f3565b610a17565b505050916109be9192610700565b90565b6109c96103be565b503390565b906109d7610408565b506109e0610408565b505f198183099102908180821091030391565b610a0d610a139293610a03610408565b5080941891610a27565b90610788565b1890565b634e487b715f526020526024601cfd5b610a2f610408565b5015159056fea264697066735822122065841755abd3833083451623b8f190a3918a47a965d330d33eedcd6bf5bce1ac64736f6c634300081c0033";

  
      type OracleConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: OracleConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class Oracle__factory extends ContractFactory {
    
      constructor(...args: OracleConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<Oracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): Oracle__factory {
      return super.connect(runner) as Oracle__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): OracleInterface {
      return new Interface(_abi) as OracleInterface;
    }
    
    override attach(address: string | Addressable): Oracle {
      return super.attach(address) as Oracle;
    }
  static connect(address: string, runner?: ContractRunner | null): Oracle {
      return new Contract(address, _abi, runner) as unknown as Oracle;
    }
  }

  
  